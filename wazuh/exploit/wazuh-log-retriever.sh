#!/bin/bash

###############################################################################
# Stores wazuh logs in /var/backups/ as a gzip
###############################################################################

# ------------------------- Configuration -------------------------
WAZUH_USER="wazuh-wui"
WAZUH_PASS="Xs6nvWB74eDTKwqjP7WE.MABl3?Y3w.q"
WAZUH_API_URL_BASE="https://192.168.8.138:55000"
API_PATH="/manager/logs"
BACKUP_DIR="/var/backups/wazuh-logs"
LOG_FILE="/var/ossec/logs/wazuh-log-backup.log"

# ------------------------- Logging -------------------------
set -euo pipefail
mkdir -p "$BACKUP_DIR"
touch "$LOG_FILE"
exec >> "$LOG_FILE" 2>&1

echo "--------- $(date +'%F %T') Starting Wazuh log backup ---------"

# ------------------------- Authenticate -------------------------
echo "Authenticating to Wazuh API"
TOKEN_RES=$(curl -sk -u "$WAZUH_USER:$WAZUH_PASS" \
    -X GET "$WAZUH_API_URL_BASE/security/user/authenticate")

TOKEN=$(echo "$TOKEN_RES" | jq -r '.data.token')

if [[ -z "$TOKEN" || "$TOKEN" == "null" ]]; then
    echo "Failed to retrieve token from Wazuh API"
    echo "Response: $TOKEN_RES"
    exit 1
else
    echo "Token acquired successfully. $TOKEN"
fi

# ------------------------- get logs from wazuh api -------------------------
NOW=$(date +%F_%H%M%S)
TMP_JSON="/tmp/wazuh-logs-${NOW}.json"
TOTAL_FETCHED=0

echo "Fetching last log entries"

for i in 0 500 1000 1500; do
    echo "[*] Fetching logs offset=$i"

    if ! PAGE=$(curl -sk --fail -H "Authorization: Bearer $TOKEN" \
        "${WAZUH_API_URL_BASE}${API_PATH}?limit=500&offset=${i}&sort=-timestamp"); then
        echo "Failed to fetch logs at offset $i"
        rm -f "$TMP_JSON"
        exit 1
    fi

    if [[ -z "$PAGE" ]]; then
        echo "Empty response at offset $i"
        rm -f "$TMP_JSON"
        exit 1
    fi

    echo "$PAGE" | jq -c '.data.affected_items[]' >> "$TMP_JSON"
    TOTAL_FETCHED=$((TOTAL_FETCHED + 500))
done

echo "Successfully fetched $TOTAL_FETCHED logs into $TMP_JSON"
# ------------------------- compress and store backup -------------------------
BACKUP_FILE="${BACKUP_DIR}/wazuh-logs-${NOW}.json.gz"
gzip -c "$TMP_JSON" > "$BACKUP_FILE"
rm -f "$TMP_JSON"

echo "Logs compressed and saved to: $BACKUP_FILE"
exit 0